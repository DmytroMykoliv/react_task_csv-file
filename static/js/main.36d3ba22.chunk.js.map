{"version":3,"sources":["components/CsvTable/CsvTable.tsx","components/CsvReader/CsvReader.tsx","csv25_test_header.tsx","App.tsx","index.tsx"],"names":["CsvTable","props","csvHeader","csvArrayData","regexEmail","RegExp","regexPhone","regexLicense","findDuplicate","forValidate","id","getId","Number","isNaN","slice","forEach","item","Id","email","toLowerCase","push","join","phone","className","map","head","classNames","test","age","experience","toFixed","moment","isValid","CsvReader","useState","csvFile","setCsvFile","setCsvArrayData","setCsvHeader","isFileValid","setValidFile","processingCsv","str","csvHeaders","indexOf","split","trim","arrayData","row","index","values","reduce","obj","key","i","every","type","accept","onChange","event","target","files","name","disabled","onClick","preventDefault","reader","FileReader","onload","result","text","toString","readAsText","getSubmit","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36d3ba22.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport './CsvTable.scss';\n\ntype Props = {\n  csvHeader: string[],\n  csvArrayData: Table[] | null,\n};\n\nexport const CsvTable: React.FC<Props> = (props) => {\n  const { csvHeader, csvArrayData } = props;\n\n  const regexEmail = new RegExp(/^[\\w-.]+@[\\w-]+\\.[a-z]{2,4}$/i);\n  const regexPhone = new RegExp(/^[+][1]\\d{10}$/);\n  const regexLicense = new RegExp(/^[0-9a-z]{6}$/);\n\n  const findDuplicate = (forValidate: string, id: number) => {\n    const getId: number[] = [];\n\n    if (!Number.isNaN(+forValidate.slice(-1))) {\n      csvArrayData?.forEach(item => {\n        if (item.Id !== id && item.phone.slice(-10) === forValidate.slice(-10)) {\n          getId.push(item.Id);\n        }\n      });\n\n      return getId.join(', ');\n    }\n\n    csvArrayData?.forEach(item => {\n      if (item.Id !== id && item.email.toLowerCase() === forValidate.toLowerCase()) {\n        getId.push(item.Id);\n      }\n    });\n\n    return `${getId.join(', ')} `;\n  };\n\n  return (\n    <table className=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          {csvHeader.map(head => (\n            <th key={head}>\n              {head}\n            </th>\n          ))}\n          <th>Duplicate with</th>\n        </tr>\n      </thead>\n      <tbody>\n        {csvArrayData && (\n          csvArrayData.map((item: Table) => (\n            <tr key={item.Id}>\n              <td>\n                {item.Id}\n              </td>\n              <td>\n                {item['full name']}\n              </td>\n              <td className={classNames(\n                'table_item', {\n                  'table_item--red': !regexPhone.test(item.phone),\n                },\n              )}\n              >\n                {item.phone}\n              </td>\n              <td className={classNames({\n                'table_item--red': !regexEmail.test(item.email),\n              })}\n              >\n                {item.email}\n              </td>\n              <td className={classNames({\n                'table_item--red': +item.age <= 21 || Number.isNaN(+item.age),\n              })}\n              >\n                {+item.age > 0 ? item.age : 'incorrect'}\n              </td>\n              <td className={classNames({\n                'table_item--red': (+item.experience < 0) || (+item.experience >= +item.age) || Number.isNaN(+item.experience),\n              })}\n              >\n                {item.experience}\n              </td>\n              <td className={classNames({\n                'table_item--red': +item['yearly income'] < 0 || Number.isNaN(+item['yearly income']),\n              })}\n              >\n                {(+item['yearly income']).toFixed(2)}\n              </td>\n              <td>\n                {item['has children'] === 'TRUE' ? 'TRUE' : 'FALSE'}\n              </td>\n              <td>\n                {item['license states']}\n              </td>\n              <td className={classNames({\n                'table_item--red': !moment(item['expiration date'], ['MM/DD/YYYY', 'YYYY-MM-DD'], true).isValid(),\n              })}\n              >\n                {item['expiration date']}\n              </td>\n              <td className={classNames({\n                'table_item--red': !regexLicense.test(item['license number']),\n              })}\n              >\n                {item['license number']}\n              </td>\n              <td>\n                <b>{findDuplicate(item.email, item.Id)}</b>\n                <b>{findDuplicate(item.phone, item.Id)}</b>\n              </td>\n            </tr>\n          ))\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { CsvTable } from '../CsvTable';\nimport { csv } from '../../csv25_test_header';\n\nimport './CsvReader.scss';\n\nexport const CsvReader: React.FC = () => {\n  const [csvFile, setCsvFile] = useState<File>();\n  const [csvArrayData, setCsvArrayData] = useState<Table[] | null>(null);\n  const [csvHeader, setCsvHeader] = useState<string[]>([]);\n  const [isFileValid, setValidFile] = useState(true);\n\n  const processingCsv = (str: string) => {\n    const csvHeaders = str.slice(0, str.indexOf('\\n')).split(',')\n      .map(item => item.trim());\n    const csvRows = str.slice(str.indexOf('\\n') + 1).split('\\n')\n      .map(item => item.trim());\n\n    const arrayData: Table[] = csvRows.map((row, index) => {\n      const values = row.split(',');\n      const getObject = csvHeaders.reduce((obj, key, i) => ({\n        ...obj,\n        Id: index + 1,\n        [key.toLowerCase()]: values[i],\n      }), {});\n\n      return getObject as Table;\n    });\n\n    setValidFile(arrayData.every(item => item.email && item.phone && item['full name']));\n\n    setCsvArrayData(arrayData);\n    setCsvHeader(csvHeaders);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValidFile(true);\n\n    if (!isFileValid) {\n      setCsvArrayData(null);\n    }\n\n    if (event.target.files) {\n      setValidFile(event.target.files[0].name.slice(-4) === '.csv');\n      setCsvFile(event.target.files[0]);\n    }\n  };\n\n  const getSubmit = () => {\n    if (csvFile) {\n      const reader = new FileReader();\n\n      reader.onload = (event: ProgressEvent<FileReader>) => {\n        if (event.target?.result) {\n          const text = event.target.result;\n\n          processingCsv(text.toString());\n        }\n      };\n\n      reader.readAsText(csvFile);\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"form\" id=\"csv-form\">\n        <fieldset className=\"form_fieldset\">\n          <legend className=\"form_legend\">\n            Choose csv file\n          </legend>\n\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            id=\"csv-file\"\n            className=\"form__input-file btn btn-info\"\n            onChange={handleChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-info\"\n            disabled={!isFileValid}\n            onClick={(event) => {\n              event.preventDefault();\n              if (csvFile) {\n                getSubmit();\n              }\n            }}\n          >\n            Submit\n          </button>\n        </fieldset>\n\n        <fieldset className=\"form_fieldset\">\n          <legend className=\"form_legend\">\n            Load current users\n          </legend>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-info\"\n            onClick={(event) => {\n              event.preventDefault();\n              processingCsv(csv);\n            }}\n          >\n            Import Users\n          </button>\n        </fieldset>\n      </form>\n\n      {!isFileValid ? (\n        <div className=\"p-3 mb-2 bg-danger text-white\">\n          File format is not correct\n        </div>\n      ) : (\n        csvArrayData && <CsvTable csvHeader={csvHeader} csvArrayData={csvArrayData} />\n      )}\n    </div>\n  );\n};\n","export const csv = 'full Name,Phone,Email,Age,Experience,Yearly Income,Has children,License states,Expiration date,License number\\nAlex Cho,+18900991919,cho.cho,12,45,1900.00,TRUE,Alabama,12/12/2030,1xr567\\nCarolus Haverbeke,+18023331912,carlo@mail.ko,22,5,1200.23,TRUE,NMLS,13/09/2030,2sc451\\nEmma de Milliano,5684123,Emma@mail.ko,45,6,200.00,FALSE,North Carolina,15/10/2030,3br582\\nPetrus de Milliano,+71234432109,PetrUs@mail.ko,36,8,1889.43,TRUE,Nevada,19/01/2030,2sc453\\nMaria de Rycke,+7865401,mariA@mail.ko,8,11,300.00,FALSE,Nevbraska,12/12/2030,3br571\\nJan van Brussel,+10912873475,JAAn@mail.ko,54,10,500.00,TRUE,NY,2-1-2031,3br572\\nPhilibert Haverbeke,12951145667,philio@mail.ko,56,20,5055.9,FALSE,CA | LA,2029-06-18,3hg573\\nJan Frans van Brussel,+234098756,jaan@mail.ko,24,10,4346,TRUE,Missouri,2029-03-08,3br574\\nPauwels van Haverbeke,+10987654321,paul@mail.ko,30,10,1000.45,TRUE,HD | MN | MI,2029-06-20,1xr568\\nClara Aernoudts,+10987654432,claRa12@mail.ko,,6,3400.12,FALSE,Mississippi,2029-09-22,3br576\\nEmile Haverbeke,+19517534561,emili@mail.ko,40,8,5433.65,TRUE,Alabama,2029-10-25,2fd888\\nLieven de Causmaecker,9541236874,livien@mail.ko,36,9,4568.98,TRUE,Alabama,2029-07-12,3br56834\\nPieter Haverbeke,4541236547,petro@mail.ko,32,20,2566.7,FALSE,Indiana,2029-12-08,3br579\\nLivina Haverbeke,+584145,liva@mail.ko,28,80,2985.43,TRUE,Maine,12/15/2031,3br580\\nPieter Bernard Haverbeke,902178436657,Berny@mail.ko,29,9,3412.44,,WA | OR,03/09/2030,2sc452\\nLieven van Haverbeke,+11230981234,mail.ko,24,9,2656.45,TRUE,SD|ND,09/01/2030,3br582\\nJoanna de Causmaecker,11098347269,jo@mail.ko,26,70,1231.11,FALSE,Alabama,07/06/2035,3br583\\nWillem Haverbeke,+117832874561,willie@mail.ko,50,5,2900.9,TRUE,NY | VT,2030-13-24,1xr567\\nLieven Haverbeke,2521478963,liVia@mail.ko,39,10,1000,FALSE,Kansas,09/01/2030,3br57\\nPieter Antone Haverbeke,+1230984761,PETRO@mail.ko,37,22,3100.4,FALSE,California,2030-13-26,1xr569\\nMaria van Brussel,+18900991919,Masha@mail.ko,31,33,2330.4,TRUE,Nevada,,3br587\\nAngela Haverbeke,+14895213657,angela@mail.ko,29,10,2900.32,FALSE,Oregon,10/01/2030,1ff254\\nElisabeth Haverbeke,2097424532,elyy@mail.ko,25,15,1000.5,FALSE,Ohio,2030-13-25,3br589\\nLievijne Jans,+14561234567,liaNij@mail.ko,25,5,1999,FALSE,KY | TN | IN,12/12/2025,2sc452';\n","import React from 'react';\nimport './App.scss';\nimport { CsvReader } from './components/CsvReader';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"starter\">\n      <CsvReader />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}